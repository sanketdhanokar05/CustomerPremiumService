package com.abc.cpservice.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.time.LocalDate;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;

import com.abc.cpservice.entity.Premium;
import com.abc.cpservice.repository.PremiumRepository;
import com.google.common.base.Optional;

@SpringBootTest
public class PremiumServiceTest {

	@InjectMocks
	private PremiumService premiumService = new PremiumServiceImpl();

	@Mock
	private PremiumRepository premiumRepository;

//	@Test
//    public void testSavePremium() {
//       
//		Premium premium = new Premium();
//        premium.setPremiumId(1);
//        premium.setCustomerId(103);
//        premium.setProductId(106);
//        premium.setPremiumAmount(2465.5);
//        premium.setPaidDate(LocalDate.of(2020, 03, 05));
//        premium.setDueDate(LocalDate.of(2022, 03, 03));
//           
//       
//        when(premiumRepository.save(premium)).thenReturn(premium);
//       
//        Premium newPremium = premiumService.addPremium(premium);
//       
//        //assertEquals(product.getProductName(), newProduct.getProductName(customerProduct));
//       
//        verify(premiumRepository,times(1)).save(premium);          
//    }

	@Test
	public void testgetPremiumDetails() {

		Premium premium = new Premium();
		premium.setPremiumId(1);
		premium.setCustomerId(103);
		premium.setProductId(106);
		premium.setPremiumAmount(2465.5);
		premium.setPaidDate(LocalDate.of(2020, 03, 03));
		premium.setDueDate(LocalDate.of(2022, 03, 03));

		int premiumId = 1;
		Optional<Premium> option = Optional.of(premium);

		when(premiumRepository.findById(1)).thenReturn(option);
		
		Premium existingPremium = premiumService.viewPremium(premiumId);
		
		assertEquals(premium.getPremiumId(),existingPremium.getPremiumId());
	}
}